//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.19 at 02:54:07 PM EST 
//


package org.imsglobal.xsd.imsqti_v2p1;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;
import org.w3._2001.xinclude.IncludeType;


/**
 * 
 *                 The OutcomeElse complexType is the container for 'Else' processing. An outcomeElse part consists of an expression which must have an effective baseType of boolean and single cardinality. For more information about the runtime data model employed see Expressions. It also contains a set of sub-rules. If the expression is true then the sub-rules are processed.
 *             
 * 
 * <p>Java class for OutcomeElse.Type complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="OutcomeElse.Type">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element ref="{http://www.imsglobal.org/xsd/imsqti_v2p1}lookupOutcomeValue"/>
 *           &lt;element ref="{http://www.imsglobal.org/xsd/imsqti_v2p1}outcomeProcessingFragment"/>
 *           &lt;element ref="{http://www.imsglobal.org/xsd/imsqti_v2p1}setOutcomeValue"/>
 *           &lt;element ref="{http://www.w3.org/2001/XInclude}include"/>
 *           &lt;element ref="{http://www.imsglobal.org/xsd/imsqti_v2p1}exitTest"/>
 *           &lt;element ref="{http://www.imsglobal.org/xsd/imsqti_v2p1}outcomeCondition"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OutcomeElse.Type", propOrder = {
    "lookupOutcomeValueOrOutcomeProcessingFragmentOrSetOutcomeValue"
})
public class OutcomeElseType {

    @XmlElements({
        @XmlElement(name = "lookupOutcomeValue", type = LookupOutcomeValueType.class),
        @XmlElement(name = "outcomeProcessingFragment", type = OutcomeProcessingFragmentType.class),
        @XmlElement(name = "setOutcomeValue", type = SetValueType.class),
        @XmlElement(name = "include", namespace = "http://www.w3.org/2001/XInclude", type = IncludeType.class),
        @XmlElement(name = "exitTest", type = EmptyPrimitiveTypeType.class),
        @XmlElement(name = "outcomeCondition", type = OutcomeConditionType.class)
    })
    protected List<Object> lookupOutcomeValueOrOutcomeProcessingFragmentOrSetOutcomeValue;

    /**
     * Gets the value of the lookupOutcomeValueOrOutcomeProcessingFragmentOrSetOutcomeValue property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the lookupOutcomeValueOrOutcomeProcessingFragmentOrSetOutcomeValue property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLookupOutcomeValueOrOutcomeProcessingFragmentOrSetOutcomeValue().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LookupOutcomeValueType }
     * {@link OutcomeProcessingFragmentType }
     * {@link SetValueType }
     * {@link IncludeType }
     * {@link EmptyPrimitiveTypeType }
     * {@link OutcomeConditionType }
     * 
     * 
     */
    public List<Object> getLookupOutcomeValueOrOutcomeProcessingFragmentOrSetOutcomeValue() {
        if (lookupOutcomeValueOrOutcomeProcessingFragmentOrSetOutcomeValue == null) {
            lookupOutcomeValueOrOutcomeProcessingFragmentOrSetOutcomeValue = new ArrayList<Object>();
        }
        return this.lookupOutcomeValueOrOutcomeProcessingFragmentOrSetOutcomeValue;
    }

}
